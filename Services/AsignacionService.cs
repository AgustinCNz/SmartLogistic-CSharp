public class AsignacionService
{

private readonly List<IVehiculo> _vehiculos;
private readonly List<Envio> _envios;
public AsignacionService(List<IVehiculo> vehiculos, List<Envio> envios)
{
_vehiculos = vehiculos;
_envios = envios;
}

public void AsignarVehiculosAPendientes()
{
    var pendientes = _envios
        .Where(e => 
            !string.IsNullOrWhiteSpace(e.Estado) &&
            e.Estado.Trim().Equals("Pendiente", StringComparison.OrdinalIgnoreCase))
        .ToList();
        
    Console.WriteLine($"Env칤os pendientes encontrados: {pendientes.Count}");

    if (pendientes.Count == 0)
    {
        Console.WriteLine("No hay env칤os pendientes para asignar.");
        return;
    }

    // 游댳 Lista para registrar los env칤os que no pudieron ser asignados
    List<Envio> enviosNoAsignados = new();

    foreach (var envio in pendientes)
    {
        Console.WriteLine($"[Debug Estado] Env칤o {envio.Id}: Estado='{envio.Estado}'");

            var vehiculo = _vehiculos
            .OfType<Vehiculo>() // Solo se consideran objetos que heredan de Vehiculo
            .Where(v => v.PuedeAsignarseA(envio)) // Aplica reglas de negocio: estado, capacidad, refrigeraci칩n
            .OrderBy(v => v.CapacidadKg) // Ordena por menor capacidad
            .FirstOrDefault(); // Elige el primero disponible que cumple

            // Verificamos que el objeto implemente IVehiculo y lo casteamos para acceder a sus propiedades
            if (vehiculo is IVehiculo v)
            {
                envio.VehiculoAsignadoId = v.Id; // Asigna el veh칤culo al env칤o
                envio.Estado = "En tr치nsito";    // Cambia el estado del env칤o
                v.Estado = "En ruta";            // Cambia el estado del veh칤culo
                Console.WriteLine($"Env칤o {envio.Id} asignado al veh칤culo {v.Id} ({v.Tipo})");
            }

        else
        {
            Console.WriteLine($"No se encontr칩 veh칤culo disponible para el env칤o {envio.Id}");
            enviosNoAsignados.Add(envio); // Agrega a la lista
        }
    }

    // 游댳 Mostrar reporte de env칤os no asignados al final
    if (enviosNoAsignados.Any())
    {
        Console.WriteLine("\nEnv칤os no asignados:");
        foreach (var noAsignado in enviosNoAsignados)
        {
            Console.WriteLine($"- Env칤o ID: {noAsignado.Id}, Producto: {noAsignado.Producto}, Peso: {noAsignado.PesoKg} kg");
        }
    }
}


/*public void AsignarVehiculosAPendientes()
{
foreach (var envio in _envios.Where(e => e.Estado ==
"Pendiente"))
{
var vehiculo = _vehiculos
.OfType<IAsignable>()
.FirstOrDefault(v => v.PuedeAsignarseA(envio));
if (vehiculo is IVehiculo v)
{
envio.VehiculoAsignadoId = v.Id;
envio.Estado = "En tr치nsito";
v.Estado = "En ruta";
Console.WriteLine($"Env칤o {envio.Id} asignado al veh칤culo {v.Id} ({v.Tipo})");
}
}
}*/
}